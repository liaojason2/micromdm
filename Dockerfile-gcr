# Build MicroMDM
FROM ubuntu:focal AS build

WORKDIR /src

COPY . /src

RUN apt-get update 
    
RUN apt-get install -y tzdata

RUN apt-get install -y software-properties-common

RUN apt-get install -y make golang git

RUN make

FROM ubuntu:focal

RUN apt update 
RUN apt-get install -y gnupg2 curl

# Install system dependencies

RUN set -e; \
    apt-get update -y && apt-get install -y \
    tini \
    lsb-release; \
    gcsFuseRepo=gcsfuse-`lsb_release -c -s`; \
    echo "deb http://packages.cloud.google.com/apt $gcsFuseRepo main" | \
    tee /etc/apt/sources.list.d/gcsfuse.list; \
    curl https://packages.cloud.google.com/apt/doc/apt-key.gpg | \
    apt-key add -; \
    apt-get update; \
    apt-get install -y gcsfuse \
    && apt-get clean

# Set fallback mount directory
ENV MNT_DIR /var/db/micromdm

# Copy local code to the container image.
ENV APP_HOME /app
WORKDIR $APP_HOME
COPY . ./

# Set ENV
ENV BUCKET bricks-micromdm-file-bucket
#ENV MNT_DIR /var/db/micromdm

# Copy micromdm
COPY --from=build /src/build/linux/micromdm /usr/bin

# Copy entrypoint
# COPY --from=build /src/entrypoint.sh .

#COPY cretential file
#COPY --from=build /src/bricks-micromdm.json .

# Install production dependencies.#
#RUN pip install -r requirements.txt

# Ensure the script is executable

RUN chmod +x /app/gcsfuse_run.sh
RUN chmod +x /app/retry.sh

EXPOSE 80 443 2195 2196 2197 5223

ENTRYPOINT ["/usr/bin/tini", "--"] 

CMD ["/app/gcsfuse_run.sh"]


#VOLUME ["/var/db/micromdm"]
#CMD ["micromdm", "serve", "-server-url", "https://bricks-micromdm-test-u6idxxekbq-de.a.run.app", "-api-key", "12345", "-tls=false"]
